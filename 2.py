# 转义字符\:
print("I'm OK")
print('I\'m learning \n     Python\n')

# Python允许用r''表示''内部的字符串默认不转义
print('\\\t\\')
print(r'\\\t\\' '\n')

# Python允许用'''...'''的格式表示多行内容
print('''line1
line2
line3\n''')

# 布尔值(True/False)、与运算、或运算、条件判断
print(3 > 2)
print(-9 < -343)
print(True and True)
print(True and False)
print(True or False)
if 111 < 222:
    print('a\n')
else:
    print('b\n')

# 空值是Python里一个特殊的值，用None表示。None不能理解为0，因为0是有意义的，而None是一个特殊的空值。

# 变量在程序中就是用一个变量名表示了，变量名必须是大小写英文、数字和_的组合，且不能用数字开头
# 在Python中，可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量，这种变量本身类型不固定的语言为动态语言
# 与之对应的成为静态语言，如Java，静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错
a = 1  # 整数
t_007 = 'T007'  # 字符串
Answer = True  # 布尔值

# Python解释器的解析下方代码的过程：
a = 'ABC'
# 1. 在内存中创建了一个'ABC'字符串
# 2. 在内存中创建了一个名为a的变量，并把它指向'ABC'
b = a
# 3. 在内存中创建了一个名为b的变量，并把它指向a指向的字符串'ABC'
a = 'XYZ'
# 4. 在内存中创建了一个'XYZ'字符串
# 5. 把a的指向改为'XYZ'(此时b的指向并没有更改)
print(b + '\n')
# 6. 打印出'ABC'

# 常量就是不能变的变量，比如常用的数学常数π就是一个常量。在Python中，通常用全部大写的变量名表示常量：
# 但事实上PI仍然是一个变量，Python根本没有任何机制保证PI不会被改变，所以，用全部大写的变量名表示常量只是一个习惯上的用法，如果你一定要改变变量PI的值，也没人能拦住你。
PI = 3.14159265359

# 在Python中，有两种除法:
# 1.一种是'/'，结果为浮点数，即使两个数恰好整除
print(10 / 3)  # 3.3333333333333335
print(9 / 3)  # 3.0
# 2.一种是'//'，称为地板除，两个整数的除法永远是整数
print(10 // 3)  # 3
print(9 // 3)  # 3

# 取余：
print(10 % 3)  # 1

# 小结：
# Python支持多种数据类型，在计算机内部，可以把任何数据都看成一个“对象”，而变量就是在程序中用来指向这些数据对象的，对变量赋值就是把数据和变量给关联起来。
# 注意：Python的整数没有大小限制，而某些语言的整数根据其存储长度是有大小限制的，例如Java对32位整数的范围限制在-2147483648-2147483647。
# Python的浮点数也没有大小限制，但是超出一定范围就直接表示为inf（无限大）。
